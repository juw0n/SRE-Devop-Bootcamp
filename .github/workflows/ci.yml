# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: ci-test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  test:
    name: test
    runs-on: ubuntu-latest

    # Service containers to run with `container-job`
    services:
        # Label used to access the service container
        postgres:
            # Docker Hub image
            image: postgres
            # Provide the password for postgres
            env:
                POSTGRES_USER: schooluser
                POSTGRES_DB: studentdb
                POSTGRES_PASSWORD: school123
            ports:
                - 5432:5432
              # Set health checks to wait until postgres has started
            options: >-
                --health-cmd pg_isready
                --health-interval 10s
                --health-timeout 5s
                --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'
    
    - name: Install migrate
      run: |
        curl -L https://github.com/golang-migrate/migrate/releases/download/v4.15.0/migrate.linux-amd64.tar.gz | tar xvz
        sudo mv migrate.linux-amd64 /usr/bin/migrate
        which migrate
    
    - name: Run migrations
      run: make migrate_up

    - name: Test
      run: make test
