# Persistent Volume
apiVersion: v1
kind: PersistentVolume
metadata:
  namespace: student-api-ns
  name: postgres-pv
spec:
  capacity:
    storage: 3Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Recycle
  hostPath:
        path: "/data/postgresData"

# Persistent Volume Claim
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: student-api-ns
  name: postgres-pvc
spec:
  resources:
    requests:
      storage: 3Gi
  accessModes:
    - ReadWriteOnce

# Postgres DB Deployment
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: student-api-ns
  name: postgres-db-deployment
  labels:
    app: postgres-db-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-db-app
  template:
    metadata:
      labels:
        app: postgres-db-app
    spec:
      nodeSelector:
        database: "database-node"
      containers:
      - name: postgres-db
        image: postgres:16.2-alpine3.18
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-credential
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-credential
              key: POSTGRES_PASSWORD
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: postgres-pvc
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: postgres-pvc
        persistentVolumeClaim:
          claimName: postgres-pvc

# DB Service
---
apiVersion: v1
kind: Service
metadata:
  namespace: student-api-ns
  name: postgres-service
  labels:
    name: postgres-db-service
spec:
  selector:
    app: postgres-db-app
  ports:
  - port: 5432
    targetPort: 5432