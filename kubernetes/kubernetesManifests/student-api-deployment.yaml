# API deployment and init container for creating studentdb database
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: student-api-ns
  name: student-api-deployment
  labels:
    app: student-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: student-api-app
  template:
    metadata:
      labels:
        name: student-api
        app: student-api-app
    spec:
      nodeSelector:
        application: application-node

      initContainers:
      - name: init-db
        image: postgres:16.2-alpine3.18
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-credential
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-credential
              key: POSTGRES_PASSWORD
        - name: POSTGRES_DB
          value: postgres
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-credential
              key: POSTGRES_PASSWORD
        command:
        - sh
        - -c
        - |
          until psql -h postgres-service -U "$POSTGRES_USER" -c "select 1"; do
            echo "Waiting for postgres"
            sleep 2
          done
          psql -v ON_ERROR_STOP=1 -h postgres-service --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" <<-EOSQL
            CREATE DATABASE studentdb;
            GRANT ALL PRIVILEGES ON DATABASE studentdb TO "$POSTGRES_USER";
          EOSQL

      containers:
      - name: student-api-app
        image: juw0n/student-go-api:v1.0.0
        env:
        - name: DB_DRIVER
          valueFrom:
            secretKeyRef:
              name: api-credential
              key: DB_DRIVER
        - name: DB_SOURCE
          valueFrom:
            secretKeyRef:
              name: api-credential
              key: DB_SOURCE
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: postgres-credential
              key: POSTGRES_DB        
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-credential
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-credential
              key: POSTGRES_PASSWORD
        ports:
        - containerPort: 8000

# api service
---
apiVersion: v1
kind: Service
metadata:
  namespace: student-api-ns
  name: student-api-service
  labels:
    name: student-api-service
spec:
  selector:
    app: student-api-app
  ports:
  - protocol: TCP
    port: 8000
    targetPort: 8000
    nodePort: 30100
  type: NodePort