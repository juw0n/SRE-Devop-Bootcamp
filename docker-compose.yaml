version: "3.9"
services:

  postgres: # Postgresql Database container
    image: postgres:16.2-alpine3.18
    environment:
     - POSTGRES_USER=schooluser
     - POSTGRES_DB=studentdb
     - POSTGRES_PASSWORD=school123
    ports:
      - "5432:5432"

  student-api1: # First API container
    build:
      context: .
      dockerfile: Dockerfile
    # ports:
    #   - "8081:8000" # # Map container port 8081 to api port 8000
    environment:
      - DB_SOURCE=postgresql://schooluser:school123@postgres:5432/studentdb?sslmode=disable
    depends_on:
      - postgres
    entrypoint: ["/app/wait-for.sh", "postgres:5432", "--", "/app/start.sh"]
    command: ["/app/student-go-api"]

  student-api2: # Second API container
    build:
      context: .
      dockerfile: Dockerfile
    # ports:
    #   - "8082:8000" # # Map container port 8082 to api port 8000
    environment:
      - DB_SOURCE=postgresql://schooluser:school123@postgres:5432/studentdb?sslmode=disable
    depends_on:
      - postgres
    entrypoint: ["/app/wait-for.sh", "postgres:5432", "--", "/app/start.sh"]
    command: ["/app/student-go-api"]

  nginx: # Nginx container
    image: nginx:latest
    ports:
      - "8080:80" # Map container port 80 to host port 80 (default HTTP port)
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf # For mounting Nginx configuration file
    depends_on:
      - student-api1 # Nginx depends on both APIs
      - student-api2